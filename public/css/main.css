:root {
    font-size: 28px;
    font-family: "Crimson Pro", serif;
    word-spacing: 0.2em;
}

html {
    overflow: hidden;
}
body {
    background: #000;
    color: white;
    height: 100vh;
    width: 100vw;
    padding: 0;
    margin: 0;
    overflow: hidden;
    position: relative;
}

input {
    box-sizing: border-box;
    position: absolute;
    top: -5rem;
    left: 0;
    right: 0;
    font-size: 1rem;
    font-weight: bold;
    padding: 0.2em;
    background-color: rgba(0, 0, 0, 0.333);
    color: limegreen;
    font-family: monospace;
    transition: top 0.25s, color 0.25s, background 0.25s;
    outline: none;
    border: none;
}
input::selection {
    background: rgb(0, 40, 0);
    color: limegreen;
}
input.error {
    color: crimson;
}
input.error::selection {
    background: rgb(40,0,0)
}
input:focus {
    top: 0;
    outline: none;
    border: none;
}

h2 {
    font-size: 1.2rem;
}
h3 {
    font-size: 1.1rem;
}

.ping {
    animation: ping 0.75s 2 alternate ease;
}

@keyframes ping {
    0%, 100% {
        transform: scale(1);
    } 
    25% {
        transform: scale(1.2);
    }
}

.shield .tempText {
    opacity: 1;
    transform: scale(1);
}
.tempText {
    margin-bottom: 1em;
    opacity: 0;
    position: relative;
    font-weight: bold;
    transform: scale(0);
    transition: opacity 0.5s, transform 0.5s;
}
.tempText::after {
    content: '🛡️';
    transform: scale(2.25);
    
    filter: brightness(0.15) grayscale(1);
    z-index: -10;
    position: absolute;
    left: 0;
}

h2, h3 {
    font-weight: normal;
    margin: 1em 0.25em 0;
    align-self: end;
    text-shadow: 0 0 8px black;
}

#healthBars {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    box-sizing: border-box;
    padding: 5vh 5vw;

    transition: opacity 1s;
    
    display: flex;
    flex-direction: column-reverse;
    
}
#healthBars.hide {
    opacity: 0;
}

.bossHealthBar {
    display: grid;
    grid-template-columns: 1fr auto auto;
    grid-gap: 0.5rem;
    animation: appear 1s 1.5s cubic-bezier(0.165, 0.84, 0.44, 1) both;
}

.healthBar {
    grid-column: span 3;
    position: relative;
    background: linear-gradient(rgb(25, 25, 25, 0.8), rgb(5, 5, 5, 0.6));
    height: 0.6rem;
    border: 3px solid black; 
    border-radius: 3px;
    box-shadow: 0 0 15px rgb(0, 0, 0);
}

.hp, .hpGhost {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    z-index: 2;

    width: 100%;
    background: linear-gradient(rgb(200, 10, 10), rgb(40, 2, 2));
    transition: width 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.hp::after {
    content: '';
    display: inline-block;
    position: absolute;
    right: 0px;
    width: 0.2em;
    top: -0.2em;
    bottom: -0.2em;
    border-radius: 5px;
    background: white;
}

.hpGhost {
    z-index: 1;
    background: linear-gradient(rgb(250, 163, 0), rgb(100, 60, 0));
    transition: width 4s cubic-bezier(0.455, 0.03, 0.515, 0.955);
}

.healing .hpGhost {
    transition-duration: 1s;
    transition-timing-function: cubic-bezier(0.445, 0.05, 0.55, 0.95);
}
.healing .hp {
    transition-duration: 4s;
    transition-delay: 1s;
    transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
}

.portrait {
    z-index: -2;
    position: absolute;
    left: 0;
    top: 0;
    height: 100vh;
    width: 100vw;
    padding: 5vh 0 0;
    display: flex;
    justify-content: center;

    transition: opacity 6s ease-in-out, top 10s 4s ease-in;

    animation: float 3s infinite alternate ease-in-out;
}
@keyframes float {
    from { transform: translateY(30px) }
}
.portrait .hurt {
    filter: brightness(2);
}

#portrait {
    display: block;
    height: 100%;
    opacity: 0;
    transition: filter 1s;
}
.show #portrait {
    animation: appearRight 1s 1s ease-out both;
}
.defeat {
    animation-play-state: paused;
    opacity: 0;
    top: 100px;
    transition: opacity 10s 4s ease-in-out, top 10s 4s ease-in;
}
.defeat #portrait {
    filter: grayscale(0.75) brightness(0.75);
}

.background, #bg, #bg svg, .blackGradient {
    position: absolute;
    z-index: -10;
    top: -200px;
    bottom: -200px;
    left: -200px;
    right: -200px;

    transform: translateX(0);
}

.blackGradient {
    z-index: -1;
    top: 0;
    bottom: -100vh;
    background: linear-gradient(#0000 0%, #0000 10%, #000 50%, #000 100%);
    transition: transform 1s 0.5s ease-out;
    transform: translateY(-100vh);
}
.blackGradient.screenDown {
    transform: translateY(0vh);
}

.blackGradient .headingWrapper {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    top: 50%;
    text-align: center;
    display: grid;
    place-content: center;
    color: #000;
    font-size: 1.7rem;
}

@keyframes appearRight {
    from {
        opacity: 0;
        transform: translateX(50px);
        filter: blur(20px) brightness(0%);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes appear {
    from {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}


.messages {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    text-align: center;
    display: grid;
    align-content: center;
}

.messages > div {
    color: gold;
    font-size: 4rem;
    display: grid;
    place-content: center;
    opacity: 0;
    transition: opacity 1s, text-shadow 5s, transform 5s;
}
.messages > div > div {
    padding: 1em 0 1em;
}

.messages > .defeated {
    color: gold;
    background: linear-gradient(
        rgba(0, 0, 0, 0), 
        rgba(0, 0, 0, 0.7),
        rgba(0, 0, 0, 0.7),
        rgba(0, 0, 0, 0.7),
        rgba(0, 0, 0, 0.7), 
        rgba(0, 0, 0, 0) );
}

.messages > .show {
    animation: message 10s;
}

@keyframes message {
    0% {
        text-shadow: 0 0 5px gold;
        opacity: 0;
        transform: scale(1);
    }
    30% {
        opacity: 1;
    }
    70% {
        opacity: 1;
    }
    100% {
        text-shadow: 0 0 50px gold;
        opacity: 0;
        transform: scale(1.15);
    }
}